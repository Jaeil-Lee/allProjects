{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lji94\\\\Desktop\\\\codingApple\\\\React\\\\blog\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* eslint-disable */\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /* 변수 - return 밖에 선언 */\n  let post = \"서면 우동 맛집 \";\n\n  /* useState */\n  let [글제목, 글제목변경] = useState([\"남자 코트 추천\", \"강남 우동맛집\", \"파이썬독학\"]);\n  let [따봉, 따봉변경] = useState([0, 0, 0]); // 굳이 함수까지 2개 작성하지 않아도 된다\n  let [modal, setModal] = useState(false); // ( ) 안에 들어가는 형식은 뭐든 상관 없다\n\n  /* 함수 */\n\n  /* 1. HTML  레이아웃 짤 때는 이렇게 return () 안에 다 짜야한다 */\n  /* 2. return 안에는 하나의 태그로 시작해서 하나의 태그로 끝나야 한다, 병렬로 태그 2개 이상 금지 */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uBE14\\uB85C\\uADF8\\uC784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        let copyTitle = [...글제목];\n        copyTitle[0] = \"여자 코트 추천\";\n        글제목변경(copyTitle);\n      },\n      children: \"\\uAE00\\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginLeft: '20px'\n      },\n      onClick: () => {\n        let copyTitleSort = [...글제목];\n        copyTitleSort.sort();\n        글제목변경(copyTitleSort);\n      },\n      children: \"\\uC815\\uB82C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), 글제목.map((e, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          onClick: () => {\n            setModal(!modal);\n          },\n          children: [글제목[i], /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: e => {\n              let copy = [...따봉];\n              copy[i] += 1;\n              따봉변경(copy);\n              e.stopPropagation();\n            },\n            children: \" \\uD83D\\uDC4D \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 14\n          }, this), \" \", 따봉[i]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"5\\uC6D4 21\\uC77C \\uBC1C\\uD589\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this);\n    }), modal == true ? /*#__PURE__*/_jsxDEV(Modal, {\n      글제목: 글제목,\n      i: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }, this) : null // 부모 state 받아오기 ⭐\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this) /* 메인 div 終 */;\n}\n\n/* 모달 */\n_s(App, \"EGxeaOExlIJxCBQhNLIWP7FpQz8=\");\n_c = App;\nfunction Modal(props) {\n  // props로 부모 state 받아오기 ⭐\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: props.글제목[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0A0\\uC9DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0C1\\uC138\\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Modal;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","post","글제목","글제목변경","따봉","따봉변경","modal","setModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","copyTitle","style","marginLeft","copyTitleSort","sort","map","e","i","copy","stopPropagation","Modal","_c","props","_c2","$RefreshReg$"],"sources":["C:/Users/lji94/Desktop/codingApple/React/blog/src/App.js"],"sourcesContent":["/* eslint-disable */\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  /* 변수 - return 밖에 선언 */\n  let post = \"서면 우동 맛집 \";\n\n  /* useState */\n  let [글제목, 글제목변경] = useState([\"남자 코트 추천\",\"강남 우동맛집\",\"파이썬독학\",]);\n  let [따봉, 따봉변경] = useState([0,0,0]); // 굳이 함수까지 2개 작성하지 않아도 된다\n  let [modal,setModal] = useState(false) // ( ) 안에 들어가는 형식은 뭐든 상관 없다\n\n  /* 함수 */\n\n  /* 1. HTML  레이아웃 짤 때는 이렇게 return () 안에 다 짜야한다 */\n  /* 2. return 안에는 하나의 태그로 시작해서 하나의 태그로 끝나야 한다, 병렬로 태그 2개 이상 금지 */\n  return (\n    <div className='App'>\n\n\n      {/* 블로그 제목 */}\n      <div className='black-nav'>\n        <h4>블로그임</h4>\n      </div>\n\n\n      {/* 버튼 */}\n      <button onClick={() => {\n          let copyTitle = [...글제목];\n          copyTitle[0] = \"여자 코트 추천\";\n          글제목변경(copyTitle);\n      }}>글수정</button>\n\n      <button style={{marginLeft:'20px'}} onClick={() => {\n          let copyTitleSort = [...글제목];\n          copyTitleSort.sort();\n          글제목변경(copyTitleSort);\n      }}>정렬</button>\n\n      {/* list 3개 */}\n      {/* <div className='list'> \n        <h4>{글제목[0]} <span onClick={() => { 따봉변경(따봉 + 1); }} > 👍 </span> {따봉} </h4> \n        <p>5월 21일 발행</p>\n      </div>\n      <div className='list'>\n        <h4>{글제목[1]}</h4>\n        <p>5월 21일 발행</p>\n      </div>\n      <div className='list'>\n        <h4 onClick={()=>{ setModal(!modal)}}>{글제목[2]}</h4>\n        <p>5월 21일 발행</p>\n      </div> */}\n\n      {\n        글제목.map((e,i)=>{\n          return(\n          <div className='list' key={i}>\n            {/* <h4 onClick={()=>{ setModal(!modal)}}>{글제목[2]}</h4> */}\n            {/* <h4 onClick={()=>{ setModal(!modal)}}>{e}</h4> */}\n            <h4 onClick={()=>{ setModal(!modal)}}>{글제목[i]} \n             <span onClick={(e) => { \n              let copy = [...따봉];\n              copy[i] += 1;\n              따봉변경(copy);\n               e.stopPropagation();}} \n             > 👍 </span> {따봉[i]} \n            </h4>\n            <p>5월 21일 발행</p>\n          </div>\n          )\n        })\n      }\n\n      {/* 모달창 */}\n      {\n        modal==true ? <Modal 글제목={글제목} i={i}/> : null  // 부모 state 받아오기 ⭐\n      }\n      \n\n    </div> /* 메인 div 終 */\n  );\n}\n\n/* 모달 */\nfunction Modal(props) { // props로 부모 state 받아오기 ⭐\n  return(\n    <div className='modal'>\n      <h4>{props.글제목[0]}</h4>\n      <p>날짜</p>\n      <p>상세내용</p>\n    </div>\n  )\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}