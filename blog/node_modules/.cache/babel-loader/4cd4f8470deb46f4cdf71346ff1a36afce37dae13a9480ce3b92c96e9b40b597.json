{"ast":null,"code":"import _toConsumableArray from\"C:/Users/lji94/Desktop/codingApple/React/blog/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/lji94/Desktop/codingApple/React/blog/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/* eslint-disable */import{useState}from\"react\";import\"./App.css\";import React,{useRef}from\"react\";// 🟡input 자동 focus용\n/* 리액트를 활용한 블로그 만들기 */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){/* 🟢변수 - return 밖에 선언 */var post=\"DESIGNED BT ICHIBAN\";/* 🟢useState */var _useState=useState([\"isseymiyake\",\"Saint Laurent\",\"Dior\"]),_useState2=_slicedToArray(_useState,2),글제목=_useState2[0],글제목변경=_useState2[1];var _useState3=useState([0,0,0]),_useState4=_slicedToArray(_useState3,2),따봉=_useState4[0],따봉변경=_useState4[1];// 굳이 함수까지 2개 작성하지 않아도 된다\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),modal=_useState6[0],setModal=_useState6[1];// 모달창 상태를 나타내기 위한 state - ( ) 안에 들어가는 형식은 뭐든 상관 없다\nvar _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),title=_useState8[0],setTitle=_useState8[1];// UI상태를 나타내기 위한 state\nvar _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),inputValue=_useState10[0],setInputValue=_useState10[1];// input 값을 저장하기 위한 state\nvar _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),when=_useState12[0],setWhen=_useState12[1];/* 🟡input에 focus */var inputRef=useRef(null);// ref를 생성\nvar handleFocus=function handleFocus(){inputRef.current.focus();// input 요소에 focus를 설정\n};/* 함수 */ /* 1. HTML  레이아웃 짤 때는 이렇게 return () 안에 다 짜야한다 */ /* 2. return 안에는 하나의 태그로 시작해서 하나의 태그로 끝나야 한다, 병렬로 태그 2개 이상 금지 */return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"my-nav\",children:/*#__PURE__*/_jsxs(\"h1\",{children:[\"Ichiban's Fashion \",/*#__PURE__*/_jsx(\"br\",{}),\" BLOG\"]})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){var copy글제목=_toConsumableArray(글제목);copy글제목[0]=\"Yohji Yamamoto\";글제목변경(copy글제목);},children:\"\\uAE00\\uC218\\uC815\"}),/*#__PURE__*/_jsx(\"button\",{style:{marginLeft:'20px'},onClick:function onClick(){var ccopy글제목Sort=_toConsumableArray(글제목);ccopy글제목Sort.sort();글제목변경(ccopy글제목Sort);},children:\"\\uC815\\uB82C\"}),글제목.map(function(e,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"list\",children:[/*#__PURE__*/_jsxs(\"h4\",{onClick:function onClick(){setModal(!modal);setTitle(i);},children:[글제목[i],/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(e){var copy=_toConsumableArray(따봉);copy[i]+=1;따봉변경(copy);e.stopPropagation();},children:\" \\u2764\\uFE0F \"}),\" \",따봉[i]]}),/*#__PURE__*/_jsx(\"p\",{children:\"1994-10-01\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){var copy글제목=_toConsumableArray(글제목);copy글제목.splice(i,1);글제목변경(copy글제목);},children:\"\\uC0AD\\uC81C\"})]},i);}),modal==true?/*#__PURE__*/_jsx(Modal,{title:title,글제목:글제목,color:\"skyblue\",글제목변경:글제목변경}):null// 부모 state 받아오기 ⭐\n// 일반 문자도 가능  ' ' 사용\n// 함수도 받아 올 수 있다 (state 함수)\n,/*#__PURE__*/_jsx(\"input\",{ref:inputRef// 🟡ref 속성 추가\n,onChange:function onChange(e){setInputValue(e.target.value);},value:inputValue// inputValue 상태를 input 요소의 값으로 설정\n}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-create\",onClick:function onClick(e){var copy글제목=_toConsumableArray(글제목);copy글제목.unshift(inputValue);//글 추가 될 때 마다 따봉개수 저장 수도 증가\nvar copy따봉=_toConsumableArray(따봉);copy따봉.unshift(0);따봉변경(copy따봉);//input에 1개 이상의 글자가 입력되어야 글 추가 가능\n!!inputValue?글제목변경(copy글제목):false;setInputValue('');handleFocus();// 🟡버튼 클릭 후 input에 focus를 설정\n},children:\"\\uAE00 \\uBC1C\\uD589\"})]})/* 메인 div 終 */;}/* 🟢모달 */function Modal(props){// props로 부모 state 받아오기 ⭐\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",style:{background:props.color},children:[/*#__PURE__*/_jsx(\"h4\",{children:props.글제목[props.title]}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uB0A0\\uC9DC\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC0C1\\uC138\\uB0B4\\uC6A9\"}),/*#__PURE__*/_jsx(\"button\",{children:\"\\uAE00\\uC218\\uC815\"})]});}export default App;","map":{"version":3,"names":["useState","React","useRef","jsx","_jsx","jsxs","_jsxs","App","post","_useState","_useState2","_slicedToArray","글제목","글제목변경","_useState3","_useState4","따봉","따봉변경","_useState5","_useState6","modal","setModal","_useState7","_useState8","title","setTitle","_useState9","_useState10","inputValue","setInputValue","_useState11","_useState12","when","setWhen","inputRef","handleFocus","current","focus","className","children","onClick","copy글제목","_toConsumableArray","style","marginLeft","ccopy글제목Sort","sort","map","e","i","copy","stopPropagation","splice","Modal","color","ref","onChange","target","value","unshift","copy따봉","props","background"],"sources":["C:/Users/lji94/Desktop/codingApple/React/blog/src/App.js"],"sourcesContent":["/* eslint-disable */\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport React, { useRef } from \"react\"; // 🟡input 자동 focus용\n\n/* 리액트를 활용한 블로그 만들기 */\n \nfunction App() {\n  /* 🟢변수 - return 밖에 선언 */\n  let post = \"DESIGNED BT ICHIBAN\";\n\n  /* 🟢useState */\n  let [글제목, 글제목변경] = useState([\"isseymiyake\",\"Saint Laurent\",\"Dior\",]);\n  let [따봉, 따봉변경] = useState([0,0,0]); // 굳이 함수까지 2개 작성하지 않아도 된다\n  let [modal,setModal] = useState(false) // 모달창 상태를 나타내기 위한 state - ( ) 안에 들어가는 형식은 뭐든 상관 없다\n  let [title,setTitle] = useState(0)  // UI상태를 나타내기 위한 state\n  let [inputValue,setInputValue] = useState('')  // input 값을 저장하기 위한 state\n  let [when,setWhen] = useState([]);\n\n  /* 🟡input에 focus */\n  const inputRef = useRef(null); // ref를 생성\n  const handleFocus = () => {\n    inputRef.current.focus(); // input 요소에 focus를 설정\n  };\n\n\n  /* 함수 */\n\n  /* 1. HTML  레이아웃 짤 때는 이렇게 return () 안에 다 짜야한다 */\n  /* 2. return 안에는 하나의 태그로 시작해서 하나의 태그로 끝나야 한다, 병렬로 태그 2개 이상 금지 */\n  return (\n    <div className='App'>\n\n\n      {/* 블로그 제목 */}\n      <div className='my-nav'>\n        <h1>Ichiban's Fashion <br/> BLOG</h1>\n      </div>\n\n\n      {/* 🟢버튼 */}\n      <button onClick={() => {\n          let copy글제목 = [...글제목];\n          copy글제목[0] = \"Yohji Yamamoto\";\n          글제목변경(copy글제목);\n      }}>글수정</button>\n\n      <button style={{marginLeft:'20px'}} onClick={() => {\n          let ccopy글제목Sort = [...글제목];\n          ccopy글제목Sort.sort();\n          글제목변경(ccopy글제목Sort);\n      }}>정렬</button>\n\n      {/* 🟢글목록 3개 , 파워코딩 */}\n      {/* <div className='list'> \n        <h4>{글제목[0]} <span onClick={() => { 따봉변경(따봉 + 1); }} > ♥️👍 </span> {따봉} </h4> \n        <p>5월 21일 발행</p>\n      </div>\n      <div className='list'>\n        <h4>{글제목[1]}</h4>\n        <p>5월 21일 발행</p>\n      </div>\n      <div className='list'>\n        <h4 onClick={()=>{ setModal(!modal)}}>{글제목[2]}</h4>\n        <p>5월 21일 발행</p>\n      </div> */}\n\n      {/* 🟢map 반복문으로 글목록 생성 */}\n      {\n        글제목.map((e,i)=>{\n\n          return(\n          <div className='list' key={i}>\n            {/* <h4 onClick={()=>{ setModal(!modal)}}>{글제목[2]}</h4> */}\n            {/* <h4 onClick={()=>{ setModal(!modal)}}>{e}</h4> */}\n            <h4 onClick={()=>{ setModal(!modal); setTitle(i)}}>{글제목[i]} \n             <span onClick={(e) => { \n              let copy = [...따봉];\n              copy[i] += 1;\n              따봉변경(copy);\n               e.stopPropagation();}} \n             > ❤️ </span> {따봉[i]} \n            </h4>\n            <p>1994-10-01</p>\n            <button onClick={()=>{\n              let copy글제목 = [...글제목];\n              copy글제목.splice(i,1);\n              글제목변경(copy글제목);\n            }}>삭제</button>\n          </div>\n          \n          )\n        })\n      }\n\n      {/* 🟢모달창 */}\n      {\n        modal==true ? <Modal title={title} 글제목={글제목} color='skyblue' 글제목변경={글제목변경} /> : null  \n        // 부모 state 받아오기 ⭐\n        // 일반 문자도 가능  ' ' 사용\n        // 함수도 받아 올 수 있다 (state 함수)\n      }                                                                                     \n    \n      {/*🟢글 발행 input + button */}\n      <input\n        ref={inputRef} // 🟡ref 속성 추가\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n        value={inputValue} // inputValue 상태를 input 요소의 값으로 설정\n      />\n        \n\n      <button className='btn-create' onClick={(e)=>{\n        let copy글제목 = [...글제목];\n        copy글제목.unshift(inputValue);\n\n        //글 추가 될 때 마다 따봉개수 저장 수도 증가\n        let copy따봉 = [...따봉]\n        copy따봉.unshift(0);\n        따봉변경(copy따봉);\n\n        //input에 1개 이상의 글자가 입력되어야 글 추가 가능\n        !!inputValue ? 글제목변경(copy글제목) : false;\n        setInputValue('');\n\n        handleFocus(); // 🟡버튼 클릭 후 input에 focus를 설정\n      }}>글 발행</button>\n\n\n    </div> /* 메인 div 終 */\n  );\n}\n\n/* 🟢모달 */\nfunction Modal(props) { // props로 부모 state 받아오기 ⭐\n  return(\n    <div className='modal' style={{background : props.color}}>\n      <h4>{props.글제목[props.title]}</h4>\n      <p>날짜</p>\n      <p>상세내용</p>\n      <button \n      //   onClick={()=>{\n      //     let copy = [...props.글제목]\n      //     copy[0] = '여자코트 추천';\n      //     props.글제목변경(copy)\n      //   }}\n      >글수정</button>\n    </div>\n  )\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}